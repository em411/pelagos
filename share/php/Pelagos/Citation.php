<?php

namespace Pelagos;

/**
 * Pelagos\Citation
 *
 * This class holds a Citation object
 *
 *
 */
class Citation
{
    /**
     * ID
     * @var $id string
     */
    private $id;
    
    /**
     * Citation Text
     * @var $text string
     */
    private $text;
    
    /**
     * Style
     * @var $style string
     */
    private $style;
    
    /**
     * Locale
     * @var $locale string
     */
    private $locale;
    
    /**
     * Timestamp
     * @var $timestamp \DateTime
     */
    private $timestamp;
    
    /**
     * Citation Constructor.
     *
     * Will create a Citation Object from given parameters.
     *
     * @param string $id Citation ID, can be DOI or UDI
     * @param string $text (Optional) Citation Text
     * @param string $style (Optional) Citation Style commonly APA
     * @param string $locale (Optional) Citation Text Locale commonly utf-8
     * @param DateTime $timestamp (Optional) Timestamp when citation is "generated" if left blank will be autogenerated
     * 
     * @return void
     */
    public function __construct(
        $id,
        $text = null,
        $style = null,
        $locale = null,
        $timestamp = null
    ) {
        $this->id = $id;
        $this->text = $text;
        $this->style = $style;
        $this->locale = $locale;
        $this->setTimeStamp($timestamp);
    }

    /**
     * Will set the Citation Timestamp.
     * 
     * @param DataTime $timestamp 
     * 
     * @return void
     */
    public function setTimeStamp($timestamp)
    {
        if ($timestamp === null) {
            $this->timestamp = new \DateTime();
        } else {
            $this->timestamp = $timestamp;
        }
    }

    /**
     * Returns the Citation Object as an array.
     * 
     * @return array
     */
    public function asArray()
    {
        return array(
            'id' => $this->id,
            'text' => $this->text,
            'style' => $this->style,
            'locale' => $this->locale,
            'timestamp' => $this->timestamp->format('c'),
        );
    }

    /**
     * Return the Citation Object as JSON
     * 
     * @return JSON
     */
    public function asJSON()
    {
        return json_encode($this->asArray(), JSON_UNESCAPED_SLASHES);
    }
}
