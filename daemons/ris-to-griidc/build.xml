<?eclipse.ant.import?>

<project basedir="." default="build.all" name="RisToGriidc">
	<!-- set global properties for this build -->
	<property name="project.name" value="RisToGriidc" />
	<property name="src.dir" location="src" />
	<property name="base.dir" location="." />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="bin.dir" location="bin" />
	<property name="lib.dir" location="lib" />
	<property name="doc.dir" value="doc" />
	<property name="user.share.lib.dir" value="/usr/share/java" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />
	<property name="jar.file.name" value="${lib.dir}/${project.name}.jar" />

	<path id="build.compile.classpath">
		<pathelement location="${bin.dir}" />
		<pathelement location="${user.share.lib.dir}/mysql-connector-java.jar" />
		<pathelement location="${user.share.lib.dir}/postgresql91-jdbc.jar" />
		<pathelement location="${user.share.lib.dir}/javamail.jar" />
		<pathelement location="${user.share.lib.dir}/ini4j.jar" />
	</path>


	<!-- env  environment  - display the environment  -->
	<target name="env" description="show the pathelements etc">
		<echo message="Project name: ${project.name}" />
		<echo message="User home: ${user.home}" />
		<echo message="src dir: ${src.dir}" />
		<echo message="base dir: ${base.dir}" />
		<echo message="build dir: ${build.dir}" />
		<echo message="dist dir: ${dist.dir}" />
		<echo message="bin dir: ${bin.dir}" />
		<echo message="lib dir: ${lib.dir}" />
		<echo message="doc dir: ${doc.dir}" />
		<echo message="user.share.lib.dir: ${user.share.lib.dir}" />
		<echo message="debuglevel: ${debuglevel}" />
		<echo message="java version target: ${target}" />
		<echo message="java version source: ${source}" />
		<echo message="classpath element ${bin.dir}" />
		<echo message="classpath element ${user.share.lib.dir}/mysql-connector-java.jar" />
		<echo message="classpath element ${user.share.lib.dir}/postgresql91-jdbc.jar" />
		<echo message="classpath element ${user.share.lib.dir}/javamail.jar" />
		<echo message="classpath element ${user.share.lib.dir}/ini4j.jar" />
		<echo message="jar file name ${jar.file.name}" />
	</target>
	<!--  init creates directories and  -->
	<target name="init" description="create necessary directories, set options">
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${lib.dir}" />
		<copy includeemptydirs="false" todir="${bin.dir}">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<!--  Clean - delete build out  -->
	<target name="clean" description="delete the bin and lib directory">
		<echo message="Clean  ${ant.project.name}: ${ant.file}" />
		<delete dir="${bin.dir}" />
		<delete dir="${lib.dir}" />
	</target>
	<!--  build.all - clean, init, build and jar  -->
	<target name="build.all" depends="clean, init, build, jar" description="do clean, init, build and jar">
	</target>
	<!--  build - compile   -->
	<target name="build" depends="init" description="build the class files">
		<echo message="Build   ${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="${bin.dir}" includeantruntime="false" source="${source}" target="${target}">
			<src path="${src.dir}" />
			<classpath refid="build.compile.classpath" />
		</javac>
	</target>
	<!--  Generate a jar file to run -->
	<target name="jar" depends="build" description="make a java archive .jar file ">
		<mkdir dir="${lib.dir}" />
		<echo message="generate a java archive: ${lib.dir}/${project.name}.jar" />
		<jar destfile="${jar.file.name}" basedir="${bin.dir}">
			<manifest>
				<attribute name="Main-Class" value="edu.tamucc.hri.griidc.RisToGriidcMain" />
			</manifest>
		</jar>
		<echo message="copy ${jar.file.name} to ${user.home}/griidcProjects/lib " />
		<copy file="${jar.file.name}" todir="${user.home}/griidcProjects/lib"/>	
	<!--	
	    <copyfile src="${jar.file.name}" dest="${user.home}/griidcProjects/lib"/>  
	 -->
	</target>
	<!-- Generate javadocs for current project into ${doc.dir} -->
	<target name="build-java-docs" depends="build" description="generate JavaDoc documentation">
		<echo message="Generate javadocs source dir: ${src.dir} Document dir: ${doc.dir}" />
		<javadoc sourcepath="${src.dir}" destdir="${doc.dir}">
			<classpath refid="build.compile.classpath" />
		</javadoc>
	</target>
	<!-- RisToGriidcMain -->
	<target name="RisToGriidcMain">
		<java classname="edu.tamucc.hri.griidc.RisToGriidcMain" failonerror="true" fork="yes">
			<classpath refid="build.compile.classpath" />
		</java>
	</target>
</project>
